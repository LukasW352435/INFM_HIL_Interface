/**
 * HIL - REST Dummy DuT
 * This is a sample component description for a REST server as dummy DuT
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "Message.h"

#include <string>
#include <sstream>
#include <stdexcept>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace dummy_dut::rest::model {

    Message::Message() {
        m_Key = "";
        m_Status = "";
    }

    Message::~Message() {
    }

    std::string Message::toJsonString(bool prettyJson) {
        std::stringstream ss;
        write_json(ss, this->toPropertyTree(), prettyJson);
        return ss.str();
    }

    void Message::fromJsonString(std::string const &jsonString) {
        std::stringstream ss(jsonString);
        ptree pt;
        read_json(ss, pt);
        this->fromPropertyTree(pt);
    }

    ptree Message::toPropertyTree() {
        ptree pt;
        ptree tmp_node;
        pt.put("key", m_Key);
        pt.put("status", m_Status);
        return pt;
    }

    void Message::fromPropertyTree(ptree const &pt) {
        ptree tmp_node;
        m_Key = pt.get("key", "");
        m_Status = pt.get("status", "");
    }

    std::string Message::getKey() const {
        return m_Key;
    }

    void Message::setKey(std::string value) {
        m_Key = value;
    }

    std::string Message::getStatus() const {
        return m_Status;
    }

    void Message::setStatus(std::string value) {
        m_Status = value;
    }

}

